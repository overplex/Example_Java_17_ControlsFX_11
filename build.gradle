plugins {
    id 'application'
    id 'org.beryx.jlink' version '2.12.0'
}

repositories {
    mavenCentral()
}

def currentOS = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem;
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

dependencies {
    implementation "org.openjfx:javafx-base:17.0.2:${platform}"
    implementation "org.openjfx:javafx-controls:17.0.2:${platform}"
    implementation "org.openjfx:javafx-graphics:17.0.2:${platform}"
    implementation "org.openjfx:javafx-fxml:17.0.2:${platform}"
    implementation 'org.controlsfx:controlsfx:11.1.1'
}

java {
    modularity.inferModulePath = true
}

application {
    mainModule = 'hellofx'
    mainClass = 'org.openjfx.MainApp'
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'hellofx'
    }
}

ext.java9Args = [
        // For various behaviors across controls
        "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=org.controlsfx.controls",
        // For ReadOnlyUnbackedObservableList across files
        "--add-exports=javafx.controls/com.sun.javafx.scene.control=org.controlsfx.controls",
        // For EventHandlerManager in AutoCompletionBinding
        "--add-exports=javafx.base/com.sun.javafx.event=org.controlsfx.controls",
        // For MappingChange, NonIterableChange across files
        "--add-exports=javafx.base/com.sun.javafx.collections=org.controlsfx.controls",
        //For SpreadsheetView
        //"--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior.TableViewBehavior=org.controlsfx.controls",
        //For SpreadsheetView
        //"--add-exports=javafx.base/com.sun.javafx.event.EventHandlerManager=org.controlsfx.controls"
]

ext.java9RuntimeArgs = [
        // For accessing getChildren in ImplUtils
        "--add-opens=javafx.graphics/javafx.scene=org.controlsfx.controls"
]

run {
    doFirst {
        java9Args.addAll(java9RuntimeArgs)
        jvmArgs = java9Args
    }
}
